:link-str: (link) 
:smry-frontend: link:#frontend[[ðŸ •\]]
:smry-backend: link:#backend[[ðŸ •\]]

This repository contains some of my projects that was developed during the course at Trybe.

Trybe is a web development school that has a genuine commitment to the professional success of its students. With the Shared Success Model, those who study at Trybe have the option of paying only when they are already working.
There are more than 1500 hours of training that covers fundamentals of web development, development, Front-end, Back-end, computer science, software engineering, agile methodologies and soft skills.



---

== Projects summary

[#frontend]
== Frontend
. link:#{p01}[Shopping Cart]
. link:#{p02}[Movie Cards Library]
. link:#{p03}[Movie Cards Library Stateful]
. link:#{p04}[Movie Cards Library CRUD]
. link:#{p05}[Starwars Planets Search]
. link:#{p06}[Recipes App]

[#backend]
== Backend
. link:#{p07}[MySQL - One For all]
. link:#{p08}[Mongodb Commerce]
. link:#{p09}[Mongodb Aggregations]
. link:#{p10}[Store Manager]
. link:#{p11}[Cookmaster]
. link:#{p12}[Stranger Things]


== Frontend
[#{p01}]
=== Shopping Cart {smry-frontend}
* *Skills developed*:
    ** Make requests to an API (Application Programming Interface) of Mercado Livre;
    ** Use your knowledge of JavaScript, CSS and HTML;
    ** Work with asynchronous functions;
* *Source code*:
    ** https://github.com/tryber/sd-010-a-project-shopping-cart[Repository]
    ** https://github.com/tryber/sd-010-a-project-shopping-cart/pull/15[Pull request]

[#{p02}]
=== Movie Cards Library {smry-frontend}
* *Skills developed*:
  ** Know the best way to install a package manager
  ** Start a project in *React*
  ** Use JSX in *React*
  ** Using *ReactDOM.render* to render elements on a web page
  ** Use `import` to use external code with your
  ** Create *React* components correctly
  ** Make use of `props` correctly
  ** Make components correctly
  ** Create multiple components dynamically
  ** Use *PropTypes* to check a prop's type when using a component
  ** Use *PropTypes* to ensure the presence of mandatory props when using a component
  ** Use *PropTypes* to check that a prop is a specific format object
  ** Use *PropTypes* to ensure that a prop is an array with elements of a given type
* *Source code*:
    ** https://github.com/tryber/sd-010-a-project-movie-cards-library[Repository]
    ** https://github.com/tryber/sd-010-a-project-movie-cards-library/pull/37[Pull request]

[#{p03}]
=== Movie Cards Library Stateful {smry-frontend}
* *Skills developed*:
  ** Read the state of a component and use it to change what we display in the browser
  ** Initialize a component, giving it a predefined state
  ** Update a component's state
  ** Capture events using React syntax
  ** Create forms using JSX syntax with the tags: `input`, `textarea`, `select`, `form`
  ** Pass information from child components to parent components via callbacks
* *Source code*:
    ** https://github.com/tryber/sd-010-a-project-movie-cards-library-stateful[Repository]
    ** https://github.com/tryber/sd-010-a-project-movie-cards-library-stateful/pull/24[Pull request]

[#{p04}]
=== Movie Cards Library CRUD {smry-frontend}
* *Skills developed*:
  ** Use componentDidMount to perform an action after the component is inserted into the DOM;
  ** Use shouldComponentUpdate to assess whether or not a component update should happen at that time;
  ** Use componentDidUpdate to perform an action after the component is updated;
  ** Use componentWillUnmount to perform an action before the component is unmounted;
  ** Use props.children to access the children of a React component and interact with them;
  ** Use the BrowserRouter component correctly;
  ** Create navigation links in the application with the Link component;
  ** Create routes, mapping the URL path with the corresponding component, via Route ;
  ** Structure and organize the routes of your application with the Switch component;
Use the Redirect component to switch between routes.
* *Source code*:
    ** https://github.com/tryber/sd-010-a-project-movie-card-library-crud[Repository]
    ** https://github.com/tryber/sd-010-a-project-movie-card-library-crud/pull/10[Pull request]

[#{p05}]
=== Star Wars Planets Search {smry-frontend}
* *Skills developed*:
  ** Use the React Context API to manage state.
  ** Use React Hook useState;
  ** Use React Hook useContext;
  ** Use React Hook useEffect;
  ** Create custom React Hooks.
* *Source code*:
    ** https://github.com/tryber/sd-010-a-project-starwars-planets-search[Repository]
    ** https://github.com/tryber/sd-010-a-project-starwars-planets-search/pull/18[Pull request]

[#{p06}]
=== Recipes App {smry-frontend}
* *Skills developed*:
  ** Use Redux to manage state
  ** Using the React-Redux library
  ** Use the React Context API to manage state
  ** Use React Hook useState
  ** Using React Hook useContext
  ** Using React Hook useEffect
  ** Create custom hooks
* *Source code*:
    ** https://github.com/tryber/sd-010-a-project-recipes-app[Repository]
    ** https://github.com/tryber/sd-010-a-project-recipes-app/pull/15[Pull request]


== Backend
[#{p07}]
=== MySQL - One For All {smry-backend}
* *Skills developed*:
  ** Model a database
  ** Identify entities, attributes and relationships
  ** Apply the 1st, 2nd and 3rd Normal Form
  ** Create tables
  ** Handle VIEWs
  ** Change existing tables
  ** Create dynamic reactions with TRIGGERS
* *Source code*:
    ** https://github.com/tryber/sd-010-a-mysql-one-for-all[Repository]
    ** https://github.com/tryber/sd-010-a-mysql-one-for-all/pull/80[Pull request]

[#{p08}]
=== Mongodb Commerce {smry-backend}
* *Skills developed*:
  ** Using the $pop, $pull and $push operators
  ** Using the $addToSet operator
  ** Use the $each, $slice and $sort operators
  ** Use the $all operator to filter documents
  ** Use the $elemMatch Operator to Filter Documents
  ** Use the $size operator to filter documents by array size
  ** Using the $expr Operator to Create Aggregate Expressions
  ** Using regular expressions and the $regex operator to fetch documents
  ** Using the textual index and the $text operator
  ** Use the $mod operator
* *Source code*:
    ** https://github.com/tryber/sd-010-a-mongodb-commerce[Repository]
    ** https://github.com/tryber/sd-010-a-mongodb-commerce/pull/24[Pull request]

[#{p09}]
=== Mongodb Aggregations {smry-backend}
* *Skills developed*:
  ** Perform complex searches in mongoDB database
  ** Use aggregation operators to pipeline
* *Source code*:
    ** https://github.com/tryber/sd-010-a-mongodb-aggregations[Repository]
    ** https://github.com/tryber/sd-010-a-mongodb-aggregations/pull/24[Pull request]

[#{p10}]
=== Store Manager {smry-backend}
* *Skills developed*:
  ** Understand how the Model layer works;
  ** Delegate specific to that layer;
  ** Connect your application with different database collections;
  ** Structure an application in layers;
  ** Delegate specific to each part of the application;
  ** Improve maintainability and reusability of your code;
  ** Understand and apply REST standards;
  ** Write signatures for intuitive and easily understandable APIs.
* *Source code*:
    ** https://github.com/tryber/sd-010-a-store-manager[Repository]
    ** https://github.com/tryber/sd-010-a-store-manager/pull/19[Pull request]

[#{p11}]
=== Cookmaster {smry-backend}
* *Skills developed*:
  ** Understand what's inside an authentication token;
  ** Generate tokens from information such as login and password;
  ** Authenticate Express routes, using JWT token;
  ** Upload files to REST APIs;
  ** Save files to the server via a REST API;
  ** Query server files through a REST api.
  ** Perform integration testsWrite signatures for intuitive and easily understandable APIs.
* *Source code*:
    ** https://github.com/tryber/sd-010-a-cookmaster[Repository]
    ** https://github.com/tryber/sd-010-a-cookmaster/pull/19[Pull request]

[#{p12}]
=== Stranger Things {smry-backend}
* *Skills developed*:
  ** Publish apps via Heroku;
  ** View logs of your published applications;
  ** Monitor your published applications;
  ** Use environment variables within Heroku;
  ** Install, use and enjoy the main features of PM2;
  ** Deploy on Heroku using resources from a process manager.
* *Source code*:
    ** https://github.com/tryber/sd-010-a-stranger-things[Repository]
    ** https://github.com/tryber/sd-010-a-stranger-things-backend/pull/26[Pull request - Backend]
    ** https://github.com/tryber/sd-010-a-stranger-things-frontend/pull/81[Pull request - Frontend]
